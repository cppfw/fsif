apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "io.github.igagis.papki_test"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven {
        url 'https://dl.bintray.com/igagis/android/'
    }
}
dependencies {
    implementation 'io.github.igagis:libutki:1.1.4+'
}







//
//apply plugin: 'com.android.model.application'
//
//
//model {
//
//    repositories {
//        libs(PrebuiltLibraries) {
////			// Configure one pre-built lib: shared
////			utki {
////				// Inform Android Studio where header file dir for this lib
////				headers.srcDir "${lib_distribution_root}/utki"
////				// Inform Android Studio where lib is -- each ABI should have a lib file
//////				binaries.withType(StaticLibraryBinary) {
//////					staticLibraryFile = file("${lib_distribution_root}/${targetPlatform.getName()}/libutki.a")
//////				}
////			}
//        }
//    }
//
//    android {
//        compileSdkVersion = 25
//        buildToolsVersion = '25.0.2'
//
//        defaultConfig{
//            applicationId = "io.github.igagis.papkitest"
//            minSdkVersion.apiLevel = 9
//            targetSdkVersion.apiLevel = 9
//            versionCode = 1
//            versionName = '1.0'
//        }
//
//        ndk {
//            platformVersion = 21
//            moduleName = 'papki-tests'
//            toolchain = 'clang'
//            stl = 'c++_shared'
//            cppFlags.add("-std=c++11")
//            cppFlags.add("-fexceptions")
//            cppFlags.add("-frtti")
//            cppFlags.add("-I" + projectDir.getAbsolutePath() + "/build/ndkLibs/include")
//            cppFlags.add("-fintegrated-as") //needed to avoid assembler error since NDK r15
//            ldLibs.addAll(['android', 'log'])
//            // build a default combined apk including all ABIs.
//            // abiFilters.addAll(['x86'])
//        }
//
//        sources {
//            main {
//                jni {
//					dependencies {
//                        project ":libpapki" linkage "static"
//					}
//                    source {
//                        srcDirs '../../tests'
//                        exclude '*/main.cpp'
//                    }
//                }
//                jniLibs {
//                    // for shared lib, lib need to be pushed to the target too
//                    // Once libs are copied into app/src/main/jniLibs directory,
//                    // Android Studio will pack them into APK's lib/ directory
//                    // Here we like to avoid another duplication by pointing
//                    // to the files that containing our libs' distribution location
//                    // so the same file is used by compiler at host, also packed
//                    // into APk to be used at Target (phone/tablet)
//                    source {
////                        srcDir "${lib_distribution_root}/"
//                    }
//                }
//            }
//        }
//        buildTypes {
//            release {
//                minifyEnabled false
//                proguardFiles.add(file('proguard-rules.pro'))
//            }
//        }
//    }
//
//    android.lintOptions {
//        abortOnError false
//    }
//}
//
//repositories {
//    maven {
//        url 'https://dl.bintray.com/igagis/android/'
//    }
//}
//dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile 'io.github.igagis:libutki:1.1.4+'
//}
//
//
//
//task extractNDKLibs {
//    doLast {
//        configurations.compile.each {
//            def file = it.absoluteFile
//            copy {
//                from zipTree(file)
//                into "build/"
//                include "ndkLibs/**/*"
//            }
//        }
//    }
//}
//build.dependsOn('extractNDKLibs')
//tasks.whenTaskAdded { task ->
//    if (task.name.startsWith('compile')) {
//        task.dependsOn('extractNDKLibs')
//    }
//}